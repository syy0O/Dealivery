name: Dealivery CI/CD

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    # 1. JDK 17 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # 2. GitHub 레포지토리 체크아웃
    - name: Checkout sources
      uses: actions/checkout@v4

    # 4. Gradle 설정
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    # 5. Gradle 빌드
    - name: Build with Gradle
      run: |
        cd backend
        chmod +x ./gradlew
        ./gradlew clean bootJar # backend 디렉토리 내에서 Gradle 빌드


    # 7. EC2 서버에 파일 전송
    - name: Copy file via SSH
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        source: "backend/build/libs/backend-0.0.1-SNAPSHOT.jar"
        target: "/home/ubuntu/" # EC2 서버의 backend 폴더로 지정
        debug: true
        overwrite: true

    # 8. Spring 애플리케이션 재시작 스크립트 실행
    - name: Restart Spring project
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          # 필요 시 기존 애플리케이션 종료
          pkill -f 'java -jar backend-0.0.1-SNAPSHOT.jar' || true  # 기존 Spring Boot 애플리케이션 종료
          # 애플리케이션 시작 (Spring Boot 실행)
          nohup java -jar /home/ubuntu/backend/build/libs/backend-0.0.1-SNAPSHOT.jar > /home/ubuntu/app.log 2>&1 &
